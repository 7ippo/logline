{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 5aece486b0e27cd3b864","webpack:///./src/logline.js","webpack:///./src/localstorage.js","webpack:///./src/interface.js","webpack:///./src/lib/util.js","webpack:///./src/Websql.js","webpack:///./src/indexeddb.js"],"names":["util","LogcatInterface","namespace","_checkProtocol","_protocol","Logline","throwError","descriptor","tickerFn","readyFn","errorFn","_reportTo","all","logs","xhr","XMLHttpRequest","logsToSend","log","key","line","upload","onprogress","onload","status","onerror","open","setRequestHeader","pop","hasOwnProperty","push","join","withCredentials","unshift","location","host","send","escape","daysToMaintain","keep","e","clean","protocol","Object","values","PROTOCOL","indexOf","init","reportTo","WEBSQL","LOCALSTORAGE","INDEXEDDB","module","exports","localStorageLogger","args","level","data","window","localStorage","getItem","JSON","parse","time","Date","now","_namesapce","setItem","stringify","filter","removeItem","Interface","_record","apply","Array","prototype","call","arguments","errMessage","Error","WebsqlLogger","triedTimes","self","_inited","_db","transaction","tx","executeSql","undefined","setTimeout","length","slice","openDatabase","res","index","rows","item","IndexedDBLogger","db","IDBTransaction","READ_WRITE","event","target","errorCode","store","objectStore","request","add","timestamp","indexedDB","IDBKeyRange","onsuccess","result","onupgradeneeded","createObjectStore","keyPath","createIndex","unique","_getTransactionStore","READ_ONLY","openCursor","cursor","value","continue","clear","range","upperBound","delete","primaryKey","close","deleteDatabase","mode"],"mappings":"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","file":"logline.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logline\"] = factory();\n\telse\n\t\troot[\"Logline\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5aece486b0e27cd3b864\n **/","import LocalStorageLogger from './localstorage';\nimport WebsqlLogger from './Websql';\nimport IndexedDBLogger from './indexeddb';\nimport * as util from './lib/util';\n\nlet LogcatInterface = function(namespace) {\n    LogcatInterface._checkProtocol();\n    return new LogcatInterface._protocol(namespace);\n};\n\nclass Logline {\n    constructor(namespace) {\n        Logline._checkProtocol();\n        return new Logline._protocol(namespace);\n    }\n\n    // 检查协议\n    static _checkProtocol() {\n        if (!Logline._protocol) {\n            util.throwError('you must choose a protocol with \"using\" method.');\n        }\n    }\n\n    // 发送日志\n    static deploy(descriptor, tickerFn, readyFn, errorFn) {\n        Logline._checkProtocol();\n        if (Logline._reportTo) {\n            Logline._protocol.all(function(logs) {\n                var xhr = new XMLHttpRequest(),\n                    logsToSend = [],\n                    log, key, line;\n\n                xhr.upload.onprogress = tickerFn;\n                xhr.onload = function() {\n                    if (200 === xhr.status) {\n                        'function' === typeof readyFn && readyFn();\n                    }\n                    else {\n                        'function' === typeof errorFn && errorFn();\n                    }\n                };\n                xhr.onerror = function() {\n                    'function' === typeof errorFn && errorFn();\n                };\n                xhr.open('POST', LogcatInterface._reportTo);\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n                // 处理logs成常见的日志形式来上报(一行一条日志内容)，避免重复键名占用空间\n                while ((log = logs.pop())) {\n                    line = [];\n                    for (key in log) {\n                        if (log.hasOwnProperty(key) && log[key]) {\n                            line.push(log[key]);\n                        }\n                    }\n                    logsToSend.push(line.join('\\t'));\n                }\n\n                xhr.withCredentials = true;\n                logsToSend.unshift(location.host + (descriptor ? (': ' + descriptor) : ''));\n                xhr.send('data=' + (escape(logsToSend.join('\\n')) || 'no data'));\n            });\n        }\n        else {\n            util.throwError('report address is not configed.');\n        }\n    }\n\n    // 清理日志\n    static keep(daysToMaintain) {\n        try {\n            Logline._checkProtocol();\n            Logline._protocol.keep(daysToMaintain);\n        } catch (e) {\n            util.throwError('unable to remove logs earlier than ' + daysToMaintain + 'd.');\n        }\n        return this;\n    }\n\n    // 清空日志并删除数据库\n    static clean() {\n        try {\n            Logline._checkProtocol();\n            Logline._protocol.clean();\n        } catch (e) { util.throwError('unable to clean log database.'); }\n        return this;\n    }\n\n    // 选择一个日志协议\n    static using(protocol) {\n        // 协议一旦选定即不允许在运行时更改\n        if (Logline._protocol) {\n            return this;\n        }\n\n        if (-1 < Object.values(Logline.PROTOCOL).indexOf(protocol)) {\n            Logline._protocol = protocol;\n            Logline.init();\n        }\n        else {\n            util.throwError('specialfied protocol is not available.');\n        }\n\n        return this;\n    }\n\n    // 初始化选定的协议\n    static init() {\n        Logline._checkProtocol();\n        Logline._protocol.init();\n\n        return this;\n    }\n\n    // 配置日志上报地址\n    static reportTo(reportTo) {\n        Logline._reportTo = reportTo;\n        return this;\n    }\n}\n\nLogline._protocol = null;\nLogline._reportTo = null;\n\nLogline.PROTOCOL = {\n    WEBSQL: WebsqlLogger,\n    LOCALSTORAGE: LocalStorageLogger,\n    INDEXEDDB: IndexedDBLogger\n};\n\nmodule.exports = Logline;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/logline.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class localStorageLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data) {\n        var logs = window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : [];\n        logs.push({\n            time: Date.now(),\n            namespace: this._namesapce,\n            level: level,\n            descriptor: descriptor,\n            data: data\n        });\n        try {\n            window.localStorage.setItem('logline', JSON.stringify(logs));\n        } catch (e) { util.throwError('error inserting record'); }\n    }\n\n    static init() {\n        if (!('localStorage' in window)) {\n            util.throwError('your platform does not support localstorage protocol.');\n        }\n        if (!window.localStorage.getItem('logline')) {\n            window.localStorage.setItem('logline', JSON.stringify([]));\n        }\n    }\n\n    static all(readyFn) {\n        readyFn(JSON.parse(window.localStorage.getItem('logline')));\n    }\n\n    static keep(daysToMaintain) {\n        var logs = !daysToMaintain ? [] : (window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : []).filter(function(log) {\n            return log.time >= (Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000);\n        });\n        window.localStorage.setItem('logline', JSON.stringify(logs));\n    }\n\n    static clean() {\n        window.localStorage.removeItem('logline');\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/localstorage.js\n **/","import * as util from './lib/util';\n\nexport default class Interface {\n    constructor(namespace) {\n        this._namesapce = namespace;\n    }\n\n    // 添加一条日志记录\n    _record(level, descriptor, data) {\n        util.throwError('method _record is not implemented.');\n    }\n\n    // 添加一条等级为info的日志记录\n    info() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'info') && arguments);\n    }\n\n    // 添加一条等级为warn的日志记录\n    warn() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'warning') && arguments);\n    }\n\n    // 添加一条等级为error的日志记录\n    error() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'error') && arguments);\n    }\n\n    // 添加一条等级为critical的日志记录\n    critical() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'critical') && arguments);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/interface.js\n **/","export function throwError(errMessage) {\n    throw new Error('Logline: ' + errMessage);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/util.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class WebsqlLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data, triedTimes) {\n        var self = this, args = arguments;\n\n        if (!triedTimes || triedTimes < 10) {\n            if (WebsqlLogger._inited) {\n                try {\n                    WebsqlLogger._db.transaction(function(tx) {\n                        tx.executeSql(\n                            'INSERT INTO logs (time, namespace, level, descriptor, data) VALUES(?, ?, ?, ? ,?)',\n                            [Date.now(), self._namesapce, level, descriptor, (data === undefined || data === '') ? '' : (JSON.stringify(data) || '')],\n                            function() {/* empty func */},\n                            function(tx, e) {throw e;}\n                        );\n                    });\n                } catch (e) { util.throwError('error inserting record'); }\n            }\n            else {\n                setTimeout(function() {\n                    switch (args.length) {\n                    case 2:\n                        Array.prototype.push.call(args, '', 1);\n                        break;\n                    case 3:\n                        Array.prototype.push.call(args, 1);\n                        break;\n                    case 4:\n                        Array.prototype.push.call(args = Array.prototype.slice.call(args, 0, 3), triedTimes + 1);\n                        break;\n                    default:\n                        break;\n                    }\n                    self._record.apply(self, args);\n                });\n            }\n        }\n    }\n\n    static init() {\n        if (!('openDatabase' in window)) {\n            util.throwError(new Error('your platform does not support websql protocol.'));\n        }\n        try {\n            WebsqlLogger._db = window.openDatabase('logline', '1.0', 'cats loves logs', 4.85 * 1024 * 1024);\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'CREATE TABLE IF NOT EXISTS logs (time, namespace, level, descriptor, data)',\n                    [],\n                    function() {\n                        WebsqlLogger._inited = true;\n                    },\n                    function() {\n                        WebsqlLogger._inited = false;\n                    }\n                );\n            });\n        } catch (e) { util.throwError('unable to init log database.'); }\n    }\n\n    static all(readyFn) {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'SELECT * FROM logs',\n                    [],\n                    function(tx, res) {\n                        var logs = [], index = res.rows.length;\n                        while (--index >= 0) {\n                            logs.push(res.rows.item(index));\n                        }\n                        readyFn(logs);\n                    },\n                    function(tx, e) {throw e;}\n                );\n            });\n        } catch (e) { util.throwError('unable to collect logs from database.'); }\n    }\n\n    static keep(daysToMaintain) {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                if (daysToMaintain) {\n                    tx.executeSql(\n                        'DELETE FROM logs WHERE time < ?',\n                        [Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000],\n                        function() {/* empty func */},\n                        function(tx, e) {throw e;}\n                    );\n                }\n                else {\n                    tx.executeSql(\n                        'DELETE FROM logs',\n                        [],\n                        function() {/* empty func */},\n                        function(tx, e) {throw e;}\n                    );\n                }\n            });\n        } catch (e) { util.throwError('unable to clean logs from database.'); }\n    }\n\n    static clean() {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'DROP TABLE logs',\n                    [],\n                    function() {/* empty func */},\n                    function(tx, e) {throw e;}\n                );\n            });\n        } catch (e) { util.throwError('unable to clean log database.'); }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Websql.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class IndexedDBLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data) {\n        let transaction = IndexedDBLogger.db.transaction(['logs'], IDBTransaction.READ_WRITE || 'readwrite');\n        transaction.onerror = event => util.throwError(event.target.errorCode);\n\n        let store = transaction.objectStore('logs');\n        let request = store.add({\n            timestamp: Date.now(),\n            namespace: this._namesapce,\n            descriptor: descriptor,\n            data: data\n        });\n\n        request.onerror = event => util.throwError(event.target.errorCode);\n    }\n\n    static init() {\n        if (!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange) {\n            util.throwError('your platform does not support indexeddb protocol.');\n        }\n\n        IndexedDBLogger.request = window.indexedDB.open('logline');\n        IndexedDBLogger.request.onerror = event => util.throwError('protocol indexeddb is prevented.');\n        IndexedDBLogger.request.onsuccess = event => {\n            IndexedDBLogger.db = event.target.result;\n            // globally handle db request errors\n            IndexedDBLogger.db.onerror = event => util.throwError(event.target.errorCode);\n        };\n        IndexedDBLogger.request.onupgradeneeded = event => {\n            // init dabasebase\n            let db = event.target.result, store = db.createObjectStore('logs', { keyPath: 'timestamp' });\n            store.createIndex('namespace', 'namespace', { unique: false });\n            store.createIndex('level', 'level', { unique: false });\n            store.createIndex('descriptor', 'descriptor', { unique: false });\n            store.createIndex('data', 'data', { unique: false });\n        };\n    }\n\n    static all(readyFn) {\n        let store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_ONLY || 'readonly'),\n            request = store.openCursor(),\n            logs = [];\n\n        request.onsuccess = event => {\n            var cursor = event.target.result;\n            if (cursor) {\n                logs.push({\n                    timestamp: cursor.value.timestamp,\n                    namespace: cursor.value.namespace,\n                    descriptor: cursor.value.descriptor,\n                    data: cursor.value.data\n                });\n                cursor.continue();\n            }\n            else {\n                readyFn(logs);\n            }\n        };\n\n        request.onerror = event => util.throwError('failed to literat on logs from database.');\n    }\n\n    static keep(daysToMaintain) {\n        let store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_WRITE);\n        if (!daysToMaintain) {\n            let request = store.clear().onerror = event => util.throwError(event.target.errorCode);\n        }\n        else {\n            let range = IDBKeyRange.upperBound((Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000), true);\n            let request = store.openCursor(range);\n            request.onsuccess = event => {\n                let cursor = event.target.result;\n                if (cursor) {\n                    store.delete(cursor.primaryKey);\n                    cursor.continue();\n                }\n            };\n            request.onerror = event => util.throwError('unable to locate logs earlier than ' + daysToMaintain + 'd.');\n        }\n    }\n\n    static clean() {\n        // database can be removed only after all connections are closed\n        IndexedDBLogger.db.close();\n        let request = window.indexedDB.deleteDatabase('logline');\n        request.onerror = event => util.throwError(event.target.errorCode);\n        /* eslint no-unused-vars: \"off\" */\n        request.onsuccess = event => delete IndexedDBLogger.db;\n    }\n\n    static _getTransactionStore(mode) {\n        if (IndexedDBLogger.db) {\n            let transaction = IndexedDBLogger.db.transaction(['logs'], mode || IDBTransaction.READ_WRITE || 'readwrite');\n            transaction.onerror = event => util.throwError(event.target.errorCode);\n            return transaction.objectStore('logs');\n        }\n        else {\n            util.throwError('log database is not created or connections is closed, cosidering init it.');\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/indexeddb.js\n **/"],"sourceRoot":""}