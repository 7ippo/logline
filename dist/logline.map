{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///logline.min.js","webpack:///webpack/bootstrap a35881672558f056941e","webpack:///./src/logline.js","webpack:///./src/websql.js","webpack:///./src/interface.js","webpack:///./src/lib/util.js","webpack:///./src/localStorage.js","webpack:///./src/indexedDB.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","_interopRequireDefault","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","_websql","_websql2","_localStorage","_localStorage2","_indexedDB","_indexedDB2","_util","util","Logline","namespace","_checkProtocol","_protocol","value","throwError","readyFn","all","logs","tickerFn","errorFn","_reportTo","log","line","xhr","XMLHttpRequest","logsToSend","upload","onprogress","onload","status","onerror","open","setRequestHeader","pop","push","join","withCredentials","unshift","location","host","send","escape","daysToMaintain","keep","e","clean","protocol","values","PROTOCOL","indexOf","init","reportTo","WEBSQL","LOCALSTORAGE","INDEXEDDB","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_interface","_interface2","WebsqlLogger","_LoggerInterface","_ref","_len","arguments","args","Array","_key","getPrototypeOf","apply","concat","level","data","triedTimes","_inited","_db","transaction","tx","executeSql","Date","now","_namesapce","undefined","JSON","stringify","setTimeout","slice","_record","window","Error","openDatabase","res","index","rows","item","Interface","errMessage","localStorageLogger","localStorage","getItem","parse","time","setItem","filter","removeItem","IndexedDBLogger","db","IDBTransaction","READ_WRITE","event","errorCode","store","objectStore","request","add","timestamp","indexedDB","IDBKeyRange","onsuccess","result","onupgradeneeded","createObjectStore","keyPath","createIndex","unique","_getTransactionStore","READ_ONLY","openCursor","cursor","range","upperBound","primaryKey","clear","close","deleteDatabase","mode"],"mappings":"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","file":"logline.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logline\"] = factory();\n\telse\n\t\troot[\"Logline\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/*!\n * logline v1.0.0 (https://github.com/latel/logline#readme)\n * Copyright 2016, latel <latelx64@gmail.com>\n * MIT license\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logline\"] = factory();\n\telse\n\t\troot[\"Logline\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _websql = __webpack_require__(1);\n\t\n\tvar _websql2 = _interopRequireDefault(_websql);\n\t\n\tvar _localStorage = __webpack_require__(4);\n\t\n\tvar _localStorage2 = _interopRequireDefault(_localStorage);\n\t\n\tvar _indexedDB = __webpack_require__(5);\n\t\n\tvar _indexedDB2 = _interopRequireDefault(_indexedDB);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar util = _interopRequireWildcard(_util);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Logline = function () {\n\t    function Logline(namespace) {\n\t        _classCallCheck(this, Logline);\n\t\n\t        Logline._checkProtocol();\n\t        return new Logline._protocol(namespace);\n\t    }\n\t\n\t    // 检查协议\n\t\n\t\n\t    _createClass(Logline, null, [{\n\t        key: '_checkProtocol',\n\t        value: function _checkProtocol() {\n\t            if (!Logline._protocol) {\n\t                util.throwError('you must choose a protocol with \"using\" method.');\n\t            }\n\t        }\n\t\n\t        // 获取所有日志\n\t\n\t    }, {\n\t        key: 'getAll',\n\t        value: function getAll(readyFn) {\n\t            Logline._checkProtocol();\n\t            Logline._protocol.all(function (logs) {\n\t                readyFn(logs);\n\t            });\n\t        }\n\t\n\t        // 发送日志\n\t\n\t    }, {\n\t        key: 'deploy',\n\t        value: function deploy(descriptor, tickerFn, readyFn, errorFn) {\n\t            Logline._checkProtocol();\n\t            if (Logline._reportTo) {\n\t                Logline._protocol.all(function (logs) {\n\t                    var xhr = new XMLHttpRequest(),\n\t                        logsToSend = [],\n\t                        log,\n\t                        key,\n\t                        line;\n\t\n\t                    xhr.upload.onprogress = tickerFn;\n\t                    xhr.onload = function () {\n\t                        if (200 === xhr.status) {\n\t                            'function' === typeof readyFn && readyFn();\n\t                        } else {\n\t                            'function' === typeof errorFn && errorFn();\n\t                        }\n\t                    };\n\t                    xhr.onerror = function () {\n\t                        'function' === typeof errorFn && errorFn();\n\t                    };\n\t                    xhr.open('POST', Logline._reportTo);\n\t                    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\t\n\t                    // 处理logs成常见的日志形式来上报(一行一条日志内容)，避免重复键名占用空间\n\t                    while (log = logs.pop()) {\n\t                        line = [];\n\t                        for (key in log) {\n\t                            if (log.hasOwnProperty(key) && log[key]) {\n\t                                line.push(log[key]);\n\t                            }\n\t                        }\n\t                        logsToSend.push(line.join('\\t'));\n\t                    }\n\t\n\t                    xhr.withCredentials = true;\n\t                    logsToSend.unshift(location.host + (descriptor ? ': ' + descriptor : ''));\n\t                    xhr.send('data=' + (escape(logsToSend.join('\\n')) || 'no data'));\n\t                });\n\t            } else {\n\t                util.throwError('report address is not configed.');\n\t            }\n\t        }\n\t\n\t        // 清理日志\n\t\n\t    }, {\n\t        key: 'keep',\n\t        value: function keep(daysToMaintain) {\n\t            try {\n\t                Logline._checkProtocol();\n\t                Logline._protocol.keep(daysToMaintain);\n\t            } catch (e) {\n\t                util.throwError('unable to remove logs earlier than ' + daysToMaintain + 'd.');\n\t            }\n\t            return this;\n\t        }\n\t\n\t        // 清空日志并删除数据库\n\t\n\t    }, {\n\t        key: 'clean',\n\t        value: function clean() {\n\t            try {\n\t                Logline._checkProtocol();\n\t                Logline._protocol.clean();\n\t            } catch (e) {\n\t                util.throwError('unable to clean log database.');\n\t            }\n\t            return this;\n\t        }\n\t\n\t        // 选择一个日志协议\n\t\n\t    }, {\n\t        key: 'using',\n\t        value: function using(protocol) {\n\t            // 协议一旦选定即不允许在运行时更改\n\t            if (Logline._protocol) {\n\t                return this;\n\t            }\n\t\n\t            if (-1 < Object.values(Logline.PROTOCOL).indexOf(protocol)) {\n\t                Logline._protocol = protocol;\n\t                Logline.init();\n\t            } else {\n\t                util.throwError('specialfied protocol is not available.');\n\t            }\n\t\n\t            return this;\n\t        }\n\t\n\t        // 初始化选定的协议\n\t\n\t    }, {\n\t        key: 'init',\n\t        value: function init() {\n\t            Logline._checkProtocol();\n\t            Logline._protocol.init();\n\t\n\t            return this;\n\t        }\n\t\n\t        // 配置日志上报地址\n\t\n\t    }, {\n\t        key: 'reportTo',\n\t        value: function reportTo(_reportTo) {\n\t            Logline._reportTo = _reportTo;\n\t            return this;\n\t        }\n\t    }]);\n\t\n\t    return Logline;\n\t}();\n\t\n\tLogline.PROTOCOL = {\n\t    WEBSQL: _websql2.default,\n\t    LOCALSTORAGE: _localStorage2.default,\n\t    INDEXEDDB: _indexedDB2.default\n\t};\n\t\n\tmodule.exports = Logline;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _interface = __webpack_require__(2);\n\t\n\tvar _interface2 = _interopRequireDefault(_interface);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar util = _interopRequireWildcard(_util);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar WebsqlLogger = function (_LoggerInterface) {\n\t    _inherits(WebsqlLogger, _LoggerInterface);\n\t\n\t    function WebsqlLogger() {\n\t        var _ref;\n\t\n\t        _classCallCheck(this, WebsqlLogger);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        return _possibleConstructorReturn(this, (_ref = WebsqlLogger.__proto__ || Object.getPrototypeOf(WebsqlLogger)).call.apply(_ref, [this].concat(args)));\n\t    }\n\t\n\t    _createClass(WebsqlLogger, [{\n\t        key: '_record',\n\t        value: function _record(level, descriptor, data, triedTimes) {\n\t            var self = this,\n\t                args = arguments;\n\t\n\t            if (!triedTimes || triedTimes < 10) {\n\t                if (WebsqlLogger._inited) {\n\t                    try {\n\t                        WebsqlLogger._db.transaction(function (tx) {\n\t                            tx.executeSql('INSERT INTO logs (time, namespace, level, descriptor, data) VALUES(?, ?, ?, ? ,?)', [Date.now(), self._namesapce, level, descriptor, data === undefined || data === '' ? '' : JSON.stringify(data) || ''], function () {/* empty func */}, function (tx, e) {\n\t                                throw e;\n\t                            });\n\t                        });\n\t                    } catch (e) {\n\t                        util.throwError('error inserting record');\n\t                    }\n\t                } else {\n\t                    setTimeout(function () {\n\t                        switch (args.length) {\n\t                            case 2:\n\t                                Array.prototype.push.call(args, '', 1);\n\t                                break;\n\t                            case 3:\n\t                                Array.prototype.push.call(args, 1);\n\t                                break;\n\t                            case 4:\n\t                                Array.prototype.push.call(args = Array.prototype.slice.call(args, 0, 3), triedTimes + 1);\n\t                                break;\n\t                            default:\n\t                                break;\n\t                        }\n\t                        self._record.apply(self, args);\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'init',\n\t        value: function init() {\n\t            if (!('openDatabase' in window)) {\n\t                util.throwError(new Error('your platform does not support websql protocol.'));\n\t            }\n\t            try {\n\t                WebsqlLogger._db = window.openDatabase('logline', '1.0', 'cats loves logs', 4.85 * 1024 * 1024);\n\t                WebsqlLogger._db.transaction(function (tx) {\n\t                    tx.executeSql('CREATE TABLE IF NOT EXISTS logs (time, namespace, level, descriptor, data)', [], function () {\n\t                        WebsqlLogger._inited = true;\n\t                    }, function () {\n\t                        WebsqlLogger._inited = false;\n\t                    });\n\t                });\n\t            } catch (e) {\n\t                util.throwError('unable to init log database.');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'all',\n\t        value: function all(readyFn) {\n\t            try {\n\t                WebsqlLogger._db.transaction(function (tx) {\n\t                    tx.executeSql('SELECT * FROM logs', [], function (tx, res) {\n\t                        var logs = [],\n\t                            index = res.rows.length;\n\t                        while (--index >= 0) {\n\t                            logs.push(res.rows.item(index));\n\t                        }\n\t                        readyFn(logs);\n\t                    }, function (tx, e) {\n\t                        throw e;\n\t                    });\n\t                });\n\t            } catch (e) {\n\t                util.throwError('unable to collect logs from database.');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'keep',\n\t        value: function keep(daysToMaintain) {\n\t            try {\n\t                WebsqlLogger._db.transaction(function (tx) {\n\t                    if (daysToMaintain) {\n\t                        tx.executeSql('DELETE FROM logs WHERE time < ?', [Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000], function () {/* empty func */}, function (tx, e) {\n\t                            throw e;\n\t                        });\n\t                    } else {\n\t                        tx.executeSql('DELETE FROM logs', [], function () {/* empty func */}, function (tx, e) {\n\t                            throw e;\n\t                        });\n\t                    }\n\t                });\n\t            } catch (e) {\n\t                util.throwError('unable to clean logs from database.');\n\t            }\n\t        }\n\t    }, {\n\t        key: 'clean',\n\t        value: function clean() {\n\t            try {\n\t                WebsqlLogger._db.transaction(function (tx) {\n\t                    tx.executeSql('DROP TABLE logs', [], function () {/* empty func */}, function (tx, e) {\n\t                        throw e;\n\t                    });\n\t                });\n\t            } catch (e) {\n\t                util.throwError('unable to clean log database.');\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return WebsqlLogger;\n\t}(_interface2.default);\n\t\n\texports.default = WebsqlLogger;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar util = _interopRequireWildcard(_util);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Interface = function () {\n\t    function Interface(namespace) {\n\t        _classCallCheck(this, Interface);\n\t\n\t        this._namesapce = namespace;\n\t    }\n\t\n\t    // 添加一条日志记录\n\t\n\t\n\t    _createClass(Interface, [{\n\t        key: '_record',\n\t        value: function _record(level, descriptor, data) {\n\t            util.throwError('method _record is not implemented.');\n\t        }\n\t\n\t        // 添加一条等级为info的日志记录\n\t\n\t    }, {\n\t        key: 'info',\n\t        value: function info() {\n\t            this._record.apply(this, Array.prototype.unshift.call(arguments, 'info') && arguments);\n\t        }\n\t\n\t        // 添加一条等级为warn的日志记录\n\t\n\t    }, {\n\t        key: 'warn',\n\t        value: function warn() {\n\t            this._record.apply(this, Array.prototype.unshift.call(arguments, 'warning') && arguments);\n\t        }\n\t\n\t        // 添加一条等级为error的日志记录\n\t\n\t    }, {\n\t        key: 'error',\n\t        value: function error() {\n\t            this._record.apply(this, Array.prototype.unshift.call(arguments, 'error') && arguments);\n\t        }\n\t\n\t        // 添加一条等级为critical的日志记录\n\t\n\t    }, {\n\t        key: 'critical',\n\t        value: function critical() {\n\t            this._record.apply(this, Array.prototype.unshift.call(arguments, 'critical') && arguments);\n\t        }\n\t    }]);\n\t\n\t    return Interface;\n\t}();\n\t\n\texports.default = Interface;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.throwError = throwError;\n\tfunction throwError(errMessage) {\n\t    throw new Error('Logline: ' + errMessage);\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _interface = __webpack_require__(2);\n\t\n\tvar _interface2 = _interopRequireDefault(_interface);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar util = _interopRequireWildcard(_util);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar localStorageLogger = function (_LoggerInterface) {\n\t    _inherits(localStorageLogger, _LoggerInterface);\n\t\n\t    function localStorageLogger() {\n\t        var _ref;\n\t\n\t        _classCallCheck(this, localStorageLogger);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        return _possibleConstructorReturn(this, (_ref = localStorageLogger.__proto__ || Object.getPrototypeOf(localStorageLogger)).call.apply(_ref, [this].concat(args)));\n\t    }\n\t\n\t    _createClass(localStorageLogger, [{\n\t        key: '_record',\n\t        value: function _record(level, descriptor, data) {\n\t            var logs = window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : [];\n\t            logs.push({\n\t                time: Date.now(),\n\t                namespace: this._namesapce,\n\t                level: level,\n\t                descriptor: descriptor,\n\t                data: data\n\t            });\n\t            try {\n\t                window.localStorage.setItem('logline', JSON.stringify(logs));\n\t            } catch (e) {\n\t                util.throwError('error inserting record');\n\t            }\n\t        }\n\t    }], [{\n\t        key: 'init',\n\t        value: function init() {\n\t            if (!('localStorage' in window)) {\n\t                util.throwError('your platform does not support localstorage protocol.');\n\t            }\n\t            if (!window.localStorage.getItem('logline')) {\n\t                window.localStorage.setItem('logline', JSON.stringify([]));\n\t            }\n\t        }\n\t    }, {\n\t        key: 'all',\n\t        value: function all(readyFn) {\n\t            readyFn(JSON.parse(window.localStorage.getItem('logline')));\n\t        }\n\t    }, {\n\t        key: 'keep',\n\t        value: function keep(daysToMaintain) {\n\t            var logs = !daysToMaintain ? [] : (window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : []).filter(function (log) {\n\t                return log.time >= Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000;\n\t            });\n\t            window.localStorage.setItem('logline', JSON.stringify(logs));\n\t        }\n\t    }, {\n\t        key: 'clean',\n\t        value: function clean() {\n\t            window.localStorage.removeItem('logline');\n\t        }\n\t    }]);\n\t\n\t    return localStorageLogger;\n\t}(_interface2.default);\n\t\n\texports.default = localStorageLogger;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _interface = __webpack_require__(2);\n\t\n\tvar _interface2 = _interopRequireDefault(_interface);\n\t\n\tvar _util = __webpack_require__(3);\n\t\n\tvar util = _interopRequireWildcard(_util);\n\t\n\tfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar IndexedDBLogger = function (_LoggerInterface) {\n\t    _inherits(IndexedDBLogger, _LoggerInterface);\n\t\n\t    function IndexedDBLogger() {\n\t        var _ref;\n\t\n\t        _classCallCheck(this, IndexedDBLogger);\n\t\n\t        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t            args[_key] = arguments[_key];\n\t        }\n\t\n\t        return _possibleConstructorReturn(this, (_ref = IndexedDBLogger.__proto__ || Object.getPrototypeOf(IndexedDBLogger)).call.apply(_ref, [this].concat(args)));\n\t    }\n\t\n\t    _createClass(IndexedDBLogger, [{\n\t        key: '_record',\n\t        value: function _record(level, descriptor, data) {\n\t            var transaction = IndexedDBLogger.db.transaction(['logs'], IDBTransaction.READ_WRITE || 'readwrite');\n\t            transaction.onerror = function (event) {\n\t                return util.throwError(event.target.errorCode);\n\t            };\n\t\n\t            var store = transaction.objectStore('logs');\n\t            var request = store.add({\n\t                timestamp: Date.now(),\n\t                namespace: this._namesapce,\n\t                descriptor: descriptor,\n\t                data: data\n\t            });\n\t\n\t            request.onerror = function (event) {\n\t                return util.throwError(event.target.errorCode);\n\t            };\n\t        }\n\t    }], [{\n\t        key: 'init',\n\t        value: function init() {\n\t            if (!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange) {\n\t                util.throwError('your platform does not support indexeddb protocol.');\n\t            }\n\t\n\t            IndexedDBLogger.request = window.indexedDB.open('logline');\n\t            IndexedDBLogger.request.onerror = function (event) {\n\t                return util.throwError('protocol indexeddb is prevented.');\n\t            };\n\t            IndexedDBLogger.request.onsuccess = function (event) {\n\t                IndexedDBLogger.db = event.target.result;\n\t                // globally handle db request errors\n\t                IndexedDBLogger.db.onerror = function (event) {\n\t                    return util.throwError(event.target.errorCode);\n\t                };\n\t            };\n\t            IndexedDBLogger.request.onupgradeneeded = function (event) {\n\t                // init dabasebase\n\t                var db = event.target.result,\n\t                    store = db.createObjectStore('logs', { keyPath: 'timestamp' });\n\t                store.createIndex('namespace', 'namespace', { unique: false });\n\t                store.createIndex('level', 'level', { unique: false });\n\t                store.createIndex('descriptor', 'descriptor', { unique: false });\n\t                store.createIndex('data', 'data', { unique: false });\n\t            };\n\t        }\n\t    }, {\n\t        key: 'all',\n\t        value: function all(readyFn) {\n\t            var store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_ONLY || 'readonly'),\n\t                request = store.openCursor(),\n\t                logs = [];\n\t\n\t            request.onsuccess = function (event) {\n\t                var cursor = event.target.result;\n\t                if (cursor) {\n\t                    logs.push({\n\t                        timestamp: cursor.value.timestamp,\n\t                        namespace: cursor.value.namespace,\n\t                        descriptor: cursor.value.descriptor,\n\t                        data: cursor.value.data\n\t                    });\n\t                    cursor.continue();\n\t                } else {\n\t                    readyFn(logs);\n\t                }\n\t            };\n\t\n\t            request.onerror = function (event) {\n\t                return util.throwError('failed to literat on logs from database.');\n\t            };\n\t        }\n\t    }, {\n\t        key: 'keep',\n\t        value: function keep(daysToMaintain) {\n\t            var store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_WRITE);\n\t            if (!daysToMaintain) {\n\t                var request = store.clear().onerror = function (event) {\n\t                    return util.throwError(event.target.errorCode);\n\t                };\n\t            } else {\n\t                var range = IDBKeyRange.upperBound(Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000, true);\n\t                var _request = store.openCursor(range);\n\t                _request.onsuccess = function (event) {\n\t                    var cursor = event.target.result;\n\t                    if (cursor) {\n\t                        store.delete(cursor.primaryKey);\n\t                        cursor.continue();\n\t                    }\n\t                };\n\t                _request.onerror = function (event) {\n\t                    return util.throwError('unable to locate logs earlier than ' + daysToMaintain + 'd.');\n\t                };\n\t            }\n\t        }\n\t    }, {\n\t        key: 'clean',\n\t        value: function clean() {\n\t            // database can be removed only after all connections are closed\n\t            IndexedDBLogger.db.close();\n\t            var request = window.indexedDB.deleteDatabase('logline');\n\t            request.onerror = function (event) {\n\t                return util.throwError(event.target.errorCode);\n\t            };\n\t            /* eslint no-unused-vars: \"off\" */\n\t            request.onsuccess = function (event) {\n\t                return delete IndexedDBLogger.db;\n\t            };\n\t        }\n\t    }, {\n\t        key: '_getTransactionStore',\n\t        value: function _getTransactionStore(mode) {\n\t            if (IndexedDBLogger.db) {\n\t                var transaction = IndexedDBLogger.db.transaction(['logs'], mode || IDBTransaction.READ_WRITE || 'readwrite');\n\t                transaction.onerror = function (event) {\n\t                    return util.throwError(event.target.errorCode);\n\t                };\n\t                return transaction.objectStore('logs');\n\t            } else {\n\t                util.throwError('log database is not created or connections is closed, considering init it.');\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return IndexedDBLogger;\n\t}(_interface2.default);\n\t\n\texports.default = IndexedDBLogger;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** logline.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a35881672558f056941e\n **/","import WebsqlLogger from './websql';\nimport LocalStorageLogger from './localStorage';\nimport IndexedDBLogger from './indexedDB';\nimport * as util from './lib/util';\n\n\nclass Logline {\n    constructor(namespace) {\n        Logline._checkProtocol();\n        return new Logline._protocol(namespace);\n    }\n\n    // 检查协议\n    static _checkProtocol() {\n        if (!Logline._protocol) {\n            util.throwError('you must choose a protocol with \"using\" method.');\n        }\n    }\n\n    // 获取所有日志\n    static getAll(readyFn) {\n        Logline._checkProtocol();\n        Logline._protocol.all(function(logs) {\n            readyFn(logs);\n        });\n    }\n\n    // 发送日志\n    static deploy(descriptor, tickerFn, readyFn, errorFn) {\n        Logline._checkProtocol();\n        if (Logline._reportTo) {\n            Logline._protocol.all(function(logs) {\n                var xhr = new XMLHttpRequest(),\n                    logsToSend = [],\n                    log, key, line;\n\n                xhr.upload.onprogress = tickerFn;\n                xhr.onload = function() {\n                    if (200 === xhr.status) {\n                        'function' === typeof readyFn && readyFn();\n                    }\n                    else {\n                        'function' === typeof errorFn && errorFn();\n                    }\n                };\n                xhr.onerror = function() {\n                    'function' === typeof errorFn && errorFn();\n                };\n                xhr.open('POST', Logline._reportTo);\n                xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n\n                // 处理logs成常见的日志形式来上报(一行一条日志内容)，避免重复键名占用空间\n                while ((log = logs.pop())) {\n                    line = [];\n                    for (key in log) {\n                        if (log.hasOwnProperty(key) && log[key]) {\n                            line.push(log[key]);\n                        }\n                    }\n                    logsToSend.push(line.join('\\t'));\n                }\n\n                xhr.withCredentials = true;\n                logsToSend.unshift(location.host + (descriptor ? (': ' + descriptor) : ''));\n                xhr.send('data=' + (escape(logsToSend.join('\\n')) || 'no data'));\n            });\n        }\n        else {\n            util.throwError('report address is not configed.');\n        }\n    }\n\n    // 清理日志\n    static keep(daysToMaintain) {\n        try {\n            Logline._checkProtocol();\n            Logline._protocol.keep(daysToMaintain);\n        } catch (e) {\n            util.throwError('unable to remove logs earlier than ' + daysToMaintain + 'd.');\n        }\n        return this;\n    }\n\n    // 清空日志并删除数据库\n    static clean() {\n        try {\n            Logline._checkProtocol();\n            Logline._protocol.clean();\n        } catch (e) { util.throwError('unable to clean log database.'); }\n        return this;\n    }\n\n    // 选择一个日志协议\n    static using(protocol) {\n        // 协议一旦选定即不允许在运行时更改\n        if (Logline._protocol) {\n            return this;\n        }\n\n        if (-1 < Object.values(Logline.PROTOCOL).indexOf(protocol)) {\n            Logline._protocol = protocol;\n            Logline.init();\n        }\n        else {\n            util.throwError('specialfied protocol is not available.');\n        }\n\n        return this;\n    }\n\n    // 初始化选定的协议\n    static init() {\n        Logline._checkProtocol();\n        Logline._protocol.init();\n\n        return this;\n    }\n\n    // 配置日志上报地址\n    static reportTo(reportTo) {\n        Logline._reportTo = reportTo;\n        return this;\n    }\n}\n\nLogline.PROTOCOL = {\n    WEBSQL: WebsqlLogger,\n    LOCALSTORAGE: LocalStorageLogger,\n    INDEXEDDB: IndexedDBLogger\n};\n\nmodule.exports = Logline;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/logline.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class WebsqlLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data, triedTimes) {\n        var self = this, args = arguments;\n\n        if (!triedTimes || triedTimes < 10) {\n            if (WebsqlLogger._inited) {\n                try {\n                    WebsqlLogger._db.transaction(function(tx) {\n                        tx.executeSql(\n                            'INSERT INTO logs (time, namespace, level, descriptor, data) VALUES(?, ?, ?, ? ,?)',\n                            [Date.now(), self._namesapce, level, descriptor, (data === undefined || data === '') ? '' : (JSON.stringify(data) || '')],\n                            function() {/* empty func */},\n                            function(tx, e) {throw e;}\n                        );\n                    });\n                } catch (e) { util.throwError('error inserting record'); }\n            }\n            else {\n                setTimeout(function() {\n                    switch (args.length) {\n                    case 2:\n                        Array.prototype.push.call(args, '', 1);\n                        break;\n                    case 3:\n                        Array.prototype.push.call(args, 1);\n                        break;\n                    case 4:\n                        Array.prototype.push.call(args = Array.prototype.slice.call(args, 0, 3), triedTimes + 1);\n                        break;\n                    default:\n                        break;\n                    }\n                    self._record.apply(self, args);\n                });\n            }\n        }\n    }\n\n    static init() {\n        if (!('openDatabase' in window)) {\n            util.throwError(new Error('your platform does not support websql protocol.'));\n        }\n        try {\n            WebsqlLogger._db = window.openDatabase('logline', '1.0', 'cats loves logs', 4.85 * 1024 * 1024);\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'CREATE TABLE IF NOT EXISTS logs (time, namespace, level, descriptor, data)',\n                    [],\n                    function() {\n                        WebsqlLogger._inited = true;\n                    },\n                    function() {\n                        WebsqlLogger._inited = false;\n                    }\n                );\n            });\n        } catch (e) { util.throwError('unable to init log database.'); }\n    }\n\n    static all(readyFn) {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'SELECT * FROM logs',\n                    [],\n                    function(tx, res) {\n                        var logs = [], index = res.rows.length;\n                        while (--index >= 0) {\n                            logs.push(res.rows.item(index));\n                        }\n                        readyFn(logs);\n                    },\n                    function(tx, e) {throw e;}\n                );\n            });\n        } catch (e) { util.throwError('unable to collect logs from database.'); }\n    }\n\n    static keep(daysToMaintain) {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                if (daysToMaintain) {\n                    tx.executeSql(\n                        'DELETE FROM logs WHERE time < ?',\n                        [Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000],\n                        function() {/* empty func */},\n                        function(tx, e) {throw e;}\n                    );\n                }\n                else {\n                    tx.executeSql(\n                        'DELETE FROM logs',\n                        [],\n                        function() {/* empty func */},\n                        function(tx, e) {throw e;}\n                    );\n                }\n            });\n        } catch (e) { util.throwError('unable to clean logs from database.'); }\n    }\n\n    static clean() {\n        try {\n            WebsqlLogger._db.transaction(function(tx) {\n                tx.executeSql(\n                    'DROP TABLE logs',\n                    [],\n                    function() {/* empty func */},\n                    function(tx, e) {throw e;}\n                );\n            });\n        } catch (e) { util.throwError('unable to clean log database.'); }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/websql.js\n **/","import * as util from './lib/util';\n\nexport default class Interface {\n    constructor(namespace) {\n        this._namesapce = namespace;\n    }\n\n    // 添加一条日志记录\n    _record(level, descriptor, data) {\n        util.throwError('method _record is not implemented.');\n    }\n\n    // 添加一条等级为info的日志记录\n    info() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'info') && arguments);\n    }\n\n    // 添加一条等级为warn的日志记录\n    warn() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'warning') && arguments);\n    }\n\n    // 添加一条等级为error的日志记录\n    error() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'error') && arguments);\n    }\n\n    // 添加一条等级为critical的日志记录\n    critical() {\n        this._record.apply(this, Array.prototype.unshift.call(arguments, 'critical') && arguments);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/interface.js\n **/","export function throwError(errMessage) {\n    throw new Error('Logline: ' + errMessage);\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/lib/util.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class localStorageLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data) {\n        var logs = window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : [];\n        logs.push({\n            time: Date.now(),\n            namespace: this._namesapce,\n            level: level,\n            descriptor: descriptor,\n            data: data\n        });\n        try {\n            window.localStorage.setItem('logline', JSON.stringify(logs));\n        } catch (e) { util.throwError('error inserting record'); }\n    }\n\n    static init() {\n        if (!('localStorage' in window)) {\n            util.throwError('your platform does not support localstorage protocol.');\n        }\n        if (!window.localStorage.getItem('logline')) {\n            window.localStorage.setItem('logline', JSON.stringify([]));\n        }\n    }\n\n    static all(readyFn) {\n        readyFn(JSON.parse(window.localStorage.getItem('logline')));\n    }\n\n    static keep(daysToMaintain) {\n        var logs = !daysToMaintain ? [] : (window.localStorage.getItem('logline') ? JSON.parse(window.localStorage.getItem('logline')) : []).filter(function(log) {\n            return log.time >= (Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000);\n        });\n        window.localStorage.setItem('logline', JSON.stringify(logs));\n    }\n\n    static clean() {\n        window.localStorage.removeItem('logline');\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/localStorage.js\n **/","import LoggerInterface from './interface';\nimport * as util from './lib/util';\n\nexport default class IndexedDBLogger extends LoggerInterface {\n    constructor(...args) {\n        super(...args);\n    }\n\n    _record(level, descriptor, data) {\n        let transaction = IndexedDBLogger.db.transaction(['logs'], IDBTransaction.READ_WRITE || 'readwrite');\n        transaction.onerror = event => util.throwError(event.target.errorCode);\n\n        let store = transaction.objectStore('logs');\n        let request = store.add({\n            timestamp: Date.now(),\n            namespace: this._namesapce,\n            descriptor: descriptor,\n            data: data\n        });\n\n        request.onerror = event => util.throwError(event.target.errorCode);\n    }\n\n    static init() {\n        if (!window.indexedDB || !window.IDBTransaction || !window.IDBKeyRange) {\n            util.throwError('your platform does not support indexeddb protocol.');\n        }\n\n        IndexedDBLogger.request = window.indexedDB.open('logline');\n        IndexedDBLogger.request.onerror = event => util.throwError('protocol indexeddb is prevented.');\n        IndexedDBLogger.request.onsuccess = event => {\n            IndexedDBLogger.db = event.target.result;\n            // globally handle db request errors\n            IndexedDBLogger.db.onerror = event => util.throwError(event.target.errorCode);\n        };\n        IndexedDBLogger.request.onupgradeneeded = event => {\n            // init dabasebase\n            let db = event.target.result, store = db.createObjectStore('logs', { keyPath: 'timestamp' });\n            store.createIndex('namespace', 'namespace', { unique: false });\n            store.createIndex('level', 'level', { unique: false });\n            store.createIndex('descriptor', 'descriptor', { unique: false });\n            store.createIndex('data', 'data', { unique: false });\n        };\n    }\n\n    static all(readyFn) {\n        let store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_ONLY || 'readonly'),\n            request = store.openCursor(),\n            logs = [];\n\n        request.onsuccess = event => {\n            var cursor = event.target.result;\n            if (cursor) {\n                logs.push({\n                    timestamp: cursor.value.timestamp,\n                    namespace: cursor.value.namespace,\n                    descriptor: cursor.value.descriptor,\n                    data: cursor.value.data\n                });\n                cursor.continue();\n            }\n            else {\n                readyFn(logs);\n            }\n        };\n\n        request.onerror = event => util.throwError('failed to literat on logs from database.');\n    }\n\n    static keep(daysToMaintain) {\n        let store = IndexedDBLogger._getTransactionStore(IDBTransaction.READ_WRITE);\n        if (!daysToMaintain) {\n            let request = store.clear().onerror = event => util.throwError(event.target.errorCode);\n        }\n        else {\n            let range = IDBKeyRange.upperBound((Date.now() - (daysToMaintain || 2) * 24 * 3600 * 1000), true);\n            let request = store.openCursor(range);\n            request.onsuccess = event => {\n                let cursor = event.target.result;\n                if (cursor) {\n                    store.delete(cursor.primaryKey);\n                    cursor.continue();\n                }\n            };\n            request.onerror = event => util.throwError('unable to locate logs earlier than ' + daysToMaintain + 'd.');\n        }\n    }\n\n    static clean() {\n        // database can be removed only after all connections are closed\n        IndexedDBLogger.db.close();\n        let request = window.indexedDB.deleteDatabase('logline');\n        request.onerror = event => util.throwError(event.target.errorCode);\n        /* eslint no-unused-vars: \"off\" */\n        request.onsuccess = event => delete IndexedDBLogger.db;\n    }\n\n    static _getTransactionStore(mode) {\n        if (IndexedDBLogger.db) {\n            let transaction = IndexedDBLogger.db.transaction(['logs'], mode || IDBTransaction.READ_WRITE || 'readwrite');\n            transaction.onerror = event => util.throwError(event.target.errorCode);\n            return transaction.objectStore('logs');\n        }\n        else {\n            util.throwError('log database is not created or connections is closed, considering init it.');\n        }\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/indexedDB.js\n **/"],"sourceRoot":""}